Update:
MS: lesson 3
Ang: lesson 3

Template
7+ knowledge interview question
2+ skill interview question
3 lesson in MS course
2 lesson in Ang course

1. OOP: 
- Object Oriented Programing -> 4 principles of OOP
2. characteristics/ fundamental/ principle of OOP
- Inheritance: all property in one class can be consumed from other class by establishing a parent/child relationship
- Encapsulation: hide the internal state (data members) and functionality (behaviors) of an object and only allow access through a public set of functions
- Polymorphism: describe situations where something take many role. When an entity behave differently in different cases.
- Abstraction: we dont care the implement of a function/class. What function is, not how function do
3. Why OOP?
- Encapsulation -> data hiding (access specifier)
- Abstraction â†’ reduces/hide complexity
- Inheritance -> Code reuse

=> General purposes:
Easy to maintain
Easy to understand
Easy to extend
Easy for integration

4. Difference between class and object
- Class: definition as a blueprint of a house
- Object: definition as a house. It is an instance of a class in runtime, one class can have many objects/instances.

5. Inheritance: 
- all property in one class can be consumed from other class by establishing a parent/child relationship => make the code reusable

6. Single inheritance, Multiple inheritance
- Inheritance is a method which can derive or construct new classes from the existing class.
- Single inheritance: we have only base class
- Multiple inheritance: One class can have more than 2 base class 

7. Why C# and some languages do not support multiple inheritance?
- Make the class more complexity, but we can implement multiple interfaces because interface only contain definition of function, not the implementations of it

==================================================================

1. Have you ever worked directly with clients?
- yes, I often work with my clients in every projects
2. Which tasks do you have to work with clients? Discuss, explain technical problems or pair programming or something?
- when working with my clients, they often give me some requirements, request me to change requirement, or sometime, they ask me about technical guide,
even they give me some bugs in application